version: '3.8'

services:

  backend:
    build: ./services/backend
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}

      - SECRET_KEY=${SECRET_KEY}
      - BACKEND_URL=${BACKEND_HOST}:${BACKEND_PORT}
      - FRONTEND_URL=${FRONTEND_HOST}:${FRONTEND_PORT}
    volumes:
      - ./services/backend:/app
    command: >
      bash -c "
        alembic upgrade head &&
        alembic revision --autogenerate &&
        alembic upgrade head &&
        uvicorn app.main:app --reload --host 0.0.0.0 --port ${BACKEND_PORT}"
    depends_on:
      - database
    restart: unless-stopped

  frontend:
    build:
      context: ./services/frontend
      args:
        BACKEND_URL: "${BACKEND_HOST}:${BACKEND_PORT}"
    ports:
      - ${FRONTEND_PORT}:80
    volumes:
      - './services/frontend:/app'

  storage:
    image: minio/minio:latest
    restart: always
    command: server --console-address \"9001\" /data
    entrypoint: |
      sh -c "
      minio server --console-address \":9001\" /data & 
      MINIO_PID=\$! && 
      sleep 5 && 
      /bin/sh /usr/bin/create_buckets.sh && 
      wait \$MINIO_PID
      "
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./storage_data:/data
      - ./services/storage/create_buckets.sh:/usr/bin/create_buckets.sh
    env_file:
      - ./.env

  database:
    image: postgres:15.1
    ports:
      - ${DB_PORT}:5432
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./postgres_data/:/var/lib/postgresql/data/

volumes:
  postgres_data:
  storage_data:
