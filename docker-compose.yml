version: '3.8'

services:

  backend:
    build: ./services/backend
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    environment:
      - REGION_NAME=${REGION_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - FRONTEND_HOST=${FRONTEND_HOST}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - SECURE=${SECURE}

      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}

      - STORAGE_URL=storage:9000
      - STORAGE_ACCESS_KEY=${MINIO_ROOT_USER}
      - STORAGE_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - STORAGE_BUCKET=${MINIO_BUCKET_NAME}

      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_SSL_REQUIRED=${SMTP_SSL_REQUIRED}
    volumes:
      - ./services/backend:/app
    command: >
      bash -c "
        alembic upgrade head &&
        alembic revision --autogenerate &&
        alembic upgrade head &&
        uvicorn app.main:app --reload --host 0.0.0.0 --port ${BACKEND_PORT}"
    depends_on:
      - database
    restart: unless-stopped

  frontend:
    build:
      context: ./services/frontend
      args:
        BACKEND_URL: "${BACKEND_HOST}:${BACKEND_PORT}"
    ports:
      - ${FRONTEND_PORT}:80
    volumes:
      - './services/frontend:/app'
    restart: unless-stopped

  storage:
    image: minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./storage_data:/data
    environment:
      - MINIO_REGION_NAME=${REGION_NAME}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY${MINIO_SECRET_KEY}
    command: server --console-address :9001 /data
    restart: unless-stopped

  database:
    image: postgres:15.1
    ports:
      - ${DB_PORT}:5432
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./postgres_data/:/var/lib/postgresql/data/
    restart: unless-stopped

volumes:
  postgres_data:
  storage_data:
